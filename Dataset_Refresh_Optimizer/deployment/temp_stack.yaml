AWSTemplateFormatVersion: "2010-09-09"

Description: qs-ds-refresh-optimizer | Stack to support automatic refresh of SPICE datasets for QS dashboards # CHANGE


Parameters:

  StackName:
    Type: String
    Default: AWS::NoValue

Resources:

  QSTopicSNSEmail:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        - Endpoint: "your_email"
          Protocol: "email"

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaFunctionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParametersByPath
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:DeleteParameters
                  - ssm:DescribeParameters
                  - sts:*
                  - quicksight:*
                  - sns:*
                Resource: '*'

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: qs-ds-refresh-optimizer | Lambda function to trigger SPICE dataset refresh.
      FunctionName: qs-ds-refresh-optimizer
      Runtime: python3.8
      Timeout: 75
      MemorySize: 512
      Handler: index.handler
      Role: !GetAtt LambdaFunctionRole.Arn
      Code:
        S3Bucket: qs-ds-refresh-optimizer
        S3Key: lambda_source/dashboard-ds-auto-refresh.zip

  ScheduledRuleproserveqssdktest:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRuleproserveqssdktest - proserve-qs-sdk-test"
      Name: "qs-ds-refresh-optimizer-proserve-qs-sdk-test"
      ScheduleExpression: "cron(30-59/30 * * * ? *)"
      State: "DISABLED"
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: "TargetFunctionV1"
          Input: !Sub '{"TARGET_DATASET": "proserve-qs-sdk-test"}'

  PermissionInvokeproserveqssdktest:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRuleproserveqssdktest"
          - "Arn"
